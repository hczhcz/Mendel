* Lib
** I/O
*** Text Stream
- !! read(var val)
- !! write(const val)
- readLine(out line string)
- writeLine(const line string)
*** Binary Stream
*** Standard I/O
- !! getChar(out c char)
- !! putChar(const c char)
*** File I/O
- getChar(out c char)
- putChar(const c char)
*** Buffer I/O
- getChar(out c char)
- putChar(const c char)
** String
*** String
- string() // TODO: remove native string and implement string as a class
**** .search
**** .replace
*** RegEx
** Containers
*** Array
- array() // TODO: remove native array and implement array as a container (like stl vector)
*** Tuple
*** Map
** Math ...
** Utilities
*** Time
* Language
** Type Info
- // TODO: all of them
*** Basic Types
*** Array
*** Closure
*** Instance
** Operators
- __assign(var val1, const val2)
- __add(const val1, const val2)
- __subtract(const val1, const val2)
- __mutiple(const val1, const val2)
- __divide(const val1, const val2)
- __mod(const val1, const val2)
- __less(const val1, const val2)
- __greater(const val1, const val2)
- __equal(const val1, const val2)
- __lessOrEqual(const val1, const val2)
- __greaterOrEqual(const val1, const val2)
- __and(const val1, const val2)
- __or(const val1, const val2)
- __not(const val)
- __index(const var1, const index)
** Control
- __do(const ...)
- __return(???)
** Control Flow
*** if-else_if-else
- __if(const cond func, const br1 func, const br2 func)
*** while
- __while(const cond func, const body func)
*** for
*** for-each
*** concurrency utilities
** Error
*** Error Information
*** Error Handling
** Compile Time Info
*** AST
*** Compile Time Control Flow
*** Import / Export
